build:
  stage: build
  image: docker:latest
  tags:
    - dind
  services:
    - name: docker:dind
      entrypoint: [ "env", "-u", "DOCKER_HOST" ]
      command: [ "dockerd-entrypoint.sh" ]
      alias: docker
  variables:
    # Tell docker CLI how to talk to Docker daemon; see
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.      html#use-docker-in-docker-executor
    DOCKER_HOST: tcp://docker:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""    
  only:
    refs:
      - master
      - develop
  script:
    - apk update && apk add git
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then IMAGE_TAG="develop"; else IMAGE_TAG="latest"; fi
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:${IMAGE_TAG} || true
    - docker build -t ${CI_REGISTRY_IMAGE}:${IMAGE_TAG} .
    - docker push ${CI_REGISTRY_IMAGE}:${IMAGE_TAG}
    - apk add make

deploy:
  stage: deploy
  image: alpine:latest
  only:
    refs:
      - master 
      - develop
  script:
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then IMAGE_TAG="develop"; else IMAGE_TAG="latest"; fi
    - chmod og= $SSH_PRIVATE_KEY
    - apk update && apk add openssh-client
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "make -C $SERVER_PATH update_api"
